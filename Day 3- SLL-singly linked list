#include<stdio.h>
#include<stdlib.h>

struct node
{
    int data;
    struct node *next;
}*n,*head,*tail;

void insbeg(int num)
{
    n=(struct node*) malloc(sizeof(struct node));
    n->data=num;
    n->next=NULL;
    if(head==NULL)
    {
        head=n;
        tail=n;
    }
    else
    {
        n->next=head;
        head=n;
    }
}

void insend(int num)
{
    n=(struct node*) malloc(sizeof(struct node));
    n->data=num;
    n->next=NULL;
    if(head==NULL)
    {
        head=n;
        tail=n;
    }
    else
    {
        tail->next=n;
        tail=n;
    }
}

void insmid(int num,int mi)
{
    struct node *t;
    n=(struct node*) malloc(sizeof(struct node));
    n->data=num;
    n->next=NULL;
    for(t=head;t!=NULL;t=t->next)
    {
        if(t->data==mi)
        {
            n->next=t->next;
            t->next=n;
            break;
        }
    }
}

void delbeg()
{
    struct node *t;
    t=head;
    head=t->next;
    free(t);
}

void delend()
{
    struct node *t,*tp;
    t=head;
    while(t->next!=NULL)
    {
        tp=t;
        t=t->next;
    }
    tail=tp;
    tail->next=NULL;
    free(t);
}

void delmid(int m)
{
    struct node *t,*tp;
    for(t=head;t!=NULL;t=t->next)
    {
        if(t->data==m)
        {
            tp->next=t->next;
            free(t);
            break;
        }
        tp=t;
    }
}

void display()
{
    struct node* t;
    for(t=head;t!=NULL;t=t->next)
    {
        printf("%d ", t->data);
    }
}

void search(int num)
{
    struct node *t;
    for(t=head;t!=NULL;t=t->next)
    {
        if(t->data==num)
        {
            printf("Element found");
            break;
        }
    }
    if(t==NULL)
    {
        printf("Element not found");
    }
}

int main()
{
    printf("tejaswi  192372120\n");
    insbeg(10);
    insbeg(20);
    insend(40);
    insend(50);
    insmid(30, 20);
    printf("The formed list is: \n");
    display();
    delbeg();
    delend();
    delmid(20);
    printf("\n After deleting: \n");
    display();
    printf("\n Searching the input element: \n");
    search(40);
}
